{"version":3,"sources":["common/navigation/header.tsx","common/navigation/menuList.tsx","utils/utils.ts","pages/api.tsx","pages/info.tsx","pages/home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","props","selectBefore","defaultValue","onSelect","value","setState","protocol","Option","headerClick","res","current","key","activePage","search","state","item","this","map","val","index","Item","to","span","style","paddingRight","Search","addonBefore","suffix","verticalAlign","placeholder","onSearch","enterButton","paddingLeft","theme","mode","selectedKeys","onClick","React","Component","MenuList","Menu","parent","menuClick","split","replace","menu","Object","keys","push","SubMenu","title","Sider","width","axios","defaults","timeout","withCredentials","interceptors","request","use","config","message","loading","response","destroy","status","error","data","Utils","method","url","param","headers","Promise","resolve","reject","then","catch","err","Api","build","path","query","parseUrl","Panel","header","row","descriptions","getTitle","requestParam","params","returnParam","return_format","returnExample","return_example","paramForm","color","description","dataSource","pagination","rowKey","_r","Column","dataIndex","render","required","getEmpty","fontSize","TreeNode","type","child","getNodes","str","content","JSON","stringify","parse","background","nodes","name","Math","random","result","label","rules","marginLeft","htmlType","nature","labelCol","wrapperCol","onFinish","postData","requestConfig","tmp","test","slice","length","baseHost","requestExample","console","log","notification","top","image","Empty","PRESENTED_IMAGE_SIMPLE","saveData","accordion","expandIconPosition","onChange","Info","apiMpde","size","column","version","projectMpde","author","package","elemtnt","Home","getJson","window","history","pushState","assign","api","menuList","Origin","info","methods","height","navigation","margin","Content","file","fileName","URLSearchParams","location","get","group","success","App","className","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d07ebc4f.chunk.js","sourcesContent":["import React from 'react';\nimport {Layout,Input,Menu,Row,Col,Select} from \"antd\";\nimport {headerProps,headerState} from './define';\nimport {Link} from \"react-router-dom\";\n\nclass Header extends React.Component<headerProps,headerState>{\n    constructor(props:headerProps){\n        super(props);\n        this.state={\n            current:\"0\",\n            protocol:\"http://\"\n        };\n    }\n\n    /**\n     * 顶部导航元素\n     */\n    public render(){\n        let item=this.props.item?.map((val,index)=>{\n            return <Menu.Item key={index}><Link to={`/method`}>{val}</Link></Menu.Item>\n        });\n        return (\n            <Layout.Header>\n                <Row>\n                    <Col span={12} style={{paddingRight:'10px'}}>\n                        <Input.Search \n                        addonBefore={this.selectBefore()} \n                        suffix=\".json\"\n                        style={{verticalAlign:\"middle\"}} \n                        placeholder=\"输入需要加载的文档json\" \n                        onSearch={this.search}\n                        enterButton/>\n                    </Col>\n\n                    <Col span={10} style={{paddingLeft:'10px'}}>\n                        <Menu \n                            theme=\"dark\" \n                            mode=\"horizontal\" \n                            selectedKeys={[this.state.current]}\n                            onClick={this.headerClick}>{item}</Menu>\n                    </Col>\n                </Row>\n                \n            </Layout.Header>\n        );\n    }\n\n    private selectBefore=():JSX.Element=>{\n        let func=(value:string):void=>{\n            this.setState({\n                protocol:value\n            })\n        }\n        return (\n            <Select defaultValue=\"http://\" onSelect={func} >\n                <Select.Option value=\"http://\">http://</Select.Option>\n                <Select.Option value=\"https://\">https://</Select.Option>\n            </Select>\n        );\n    }\n\n    /**\n     * 顶部导航点击事件\n     */\n    private headerClick=(res:any):void=>{\n        this.setState({\n            current: res.key,\n        });\n\n        if(this.props.activePage){\n            this.props.activePage(res.key);\n        }\n    }\n    /**\n     * 搜索\n     */\n    private search=(value:string):void=>{\n        if(this.props.search){\n            this.props.search(value+'.json');\n        }\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {Layout,Menu} from \"antd\";\nimport {menuProps,menuState} from './define';\n\nclass MenuList extends React.Component<menuProps,menuState>{\n    constructor(props:menuProps){\n        super(props);\n        this.state={\n            current:\"\"\n        };\n    }\n\n    /**\n     * 左边菜单栏\n     */\n    public render(){\n        let item:Array<JSX.Element>=[];\n        for(let key in this.props.item){\n            let menu=Object.keys(this.props.item[key]);\n            item.push(\n                <Menu.SubMenu key={`${key}`} title={key}>\n                    {this.Menu(menu,key)}\n                </Menu.SubMenu>\n            );\n        }\n        return (\n            <Layout.Sider width={366}>\n                <Menu mode='inline' onClick={this.menuClick}>\n                    {item}\n                </Menu>\n            </Layout.Sider>\n        );\n    }\n\n    private Menu=(item:Array<string>,parent:string):JSX.Element[]=>{\n        return item.map((val,index)=>{\n            return (\n                <Menu.Item key={`${val}-${parent}`}>\n                    {val}\n                </Menu.Item>\n            )\n        });\n    }\n\n    private menuClick=(res:any):void=>{\n        let index=res.key.split('-');\n        if(this.props.replace && res.key !== this.state.current){\n            this.setState({current:res.key});\n            this.props.replace(res.key,this.props.item[index[1]][index[0]]);\n        }\n    }\n\n}\n\nexport default MenuList;","import axios,{AxiosRequestConfig,AxiosResponse} from \"axios\";\nimport {message} from \"antd\";\n\n//设置超时\naxios.defaults.timeout = 10000;\n//跨域请求\naxios.defaults.withCredentials = true;\n//请求拦截器\naxios.interceptors.request.use((config:AxiosRequestConfig):AxiosRequestConfig=>{\n    message.loading('加载中',0);\n    return config;\n});\n//返回拦截器\naxios.interceptors.response.use((response:AxiosResponse):any=>{\n    message.destroy();\n    if(response.status !== 200){\n        message.error('请求失败！');\n        return [];\n    }\n    return response.data;\n});\n\nclass Utils{\n\n    //请求\n    static request=(method:string,url:string,param?:any):Promise<any>=>{\n        let config:any={\n            url:url,\n            method:method,\n            headers:{\n                \"content-type\":\"application/json; charset=UTF-8\",\n                \"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyQWdlbnQiOiIwOThmNmJjZDQ2MjFkMzczY2FkZTRlODMyNjI3YjRmNiIsInRva2VuIjoiYjk1ZWJiNWJkMzFlMzc5Y2JlZDFmYzc1YjNhY2FmNTUiLCJjcmVhdGVUaW1lIjoxNTg5ODc4NzcxfQ.snBq4thmKvSJtnNOgEZKbVIW7HP1swsQvoclC_BKcqQ\"\n            },\n            withCredentials:false,\n            timeout: 30000,\n        };\n        if(param){\n            if(method==='get'){\n                config['params']=param;\n            }else{\n                config['data']=param;\n            }\n        }\n        return new Promise((resolve,reject)=>{\n            axios.request(config).then(res=>{\n                if(res){\n                    resolve(res);\n                }\n                reject(res);\n            }).catch(err=>{\n                reject(err);\n            });\n        });\n    }\n}\n\nexport default Utils;","import React from \"react\";\nimport {Tag,Empty,Collapse,Table,Tree,Form,Input,Button,notification} from \"antd\";\nimport {ApiProps,UrlParam,nodeParam,paramFormat,ApiState} from \"./define\";\nimport Utils from \"../utils/utils\";\nclass Api extends React.Component<ApiProps,ApiState>{\n    constructor(props:ApiProps){\n        super(props)\n        this.state={\n            color:{'get':\"#2db7f5\",'post':\"#87d068\",'delete':\"#f50\",'put':'#722ed1'},\n            requestConfig:{\n                method:\"\",\n                url:\"\"\n            },\n        }\n    }\n    public render(){\n        if(!this.props.item){\n            return  <Empty description=\"无内容\" />;\n        }\n        return (\n            <Collapse accordion  expandIconPosition='right' onChange={this.saveData}>\n                {this.build()}\n            </Collapse>\n        );\n    }\n\n    private build=():JSX.Element[]=> {\n        return (this.props.item as Array<any>).map((item,index)=>{\n            let key=`${item.url.method}-space-${item.url.path}`;\n            let query=this.parseUrl(item.url.path);\n            return(\n                <Collapse.Panel header={this.row(item.url,item?.descriptions?.[0])} key={key}>\n                    {this.getTitle('请求参数：')}\n                    {this.requestParam(item?.params)}\n                    <br/>\n                    {this.getTitle('返回参数格式：')}\n                    {this.returnParam(item?.return_format)}\n                    <br/>\n                    {this.getTitle('返回参数示例：')}\n                    {this.returnExample(item?.return_example)}\n                    <br/>\n                    {this.getTitle('测试：')}\n                    {this.paramForm(key,query,item?.params)}\n                </Collapse.Panel>\n                \n            );\n        });\n    }\n\n    //请求path以及method\n    private row=(param:UrlParam,descriptions:string):JSX.Element=>{\n        return (\n            <div>\n                <Tag color={(this.state.color as any)[param.method]}>{param.method}</Tag>\n                <span>{param.path} &nbsp; {param.description ? param.description : descriptions}</span>\n            </div>\n        );\n    }\n\n    //请求参数\n    private requestParam=(item:any):JSX.Element=>{\n        if(!item){\n            return this.getEmpty('无需请求参数');\n        }\n\n        return(\n            <Table dataSource={item} pagination={false} rowKey={(_r:any,index:any)=>`table-column${index}`}>\n                <Table.Column title=\"名称\"  dataIndex=\"name\"/>\n                <Table.Column title='类型'  dataIndex=\"type\"/>\n                <Table.Column title='必传'  dataIndex=\"required\" render={required=>{\n                    let is_required=required ? <a>是</a> : <span>否</span>;\n                    return is_required;\n                }}/>\n                <Table.Column title='默认'  dataIndex=\"default\"/>\n                <Table.Column title='说明'  dataIndex=\"description\"/>\n            </Table>\n        );\n    }\n\n    //返回参数格式\n    private returnParam=(item:any):JSX.Element=>{\n        if(!item){\n            return this.getEmpty('无返回参数格式');\n        }\n        return (\n            <Tree style={{fontSize:'16.6px'}}>\n                <Tree.TreeNode title={item.type} key={`${item.type}Tree`}>\n                    {item.child.map((item:nodeParam)=>{\n                        return this.getNodes(item)\n                    })}\n                </Tree.TreeNode>\n            </Tree>\n        );\n    }\n\n    //返回参数示例\n    private returnExample=(str:string):JSX.Element=>{\n        if(!str){\n            return this.getEmpty('无返回示例');\n        }\n        let content=null;\n        try {\n            content=JSON.stringify(JSON.parse(str),null,\"\\t\");\n        } catch (error) {\n            content=str;\n        }\n        return (\n            <pre style={{background:'#00000012'}}>\n                {content}\n            </pre>\n        );\n    }\n    \n    //获取子节点\n    private getNodes=(nodes:nodeParam):JSX.Element=>{\n        if(!nodes){\n            return <span></span>;\n        }\n\n        let child=null;\n        if(nodes.child){\n            child=nodes.child.map((item)=>{\n                return this.getNodes(item);\n            });\n        }\n        let title=`${nodes.name} : ${nodes.type}`;\n        return (    \n            <Tree.TreeNode title={title} key={Math.random()}>\n                {child}\n            </Tree.TreeNode>\n        );\n    }\n\n    //将请求参数转换form表单\n    private paramForm=(key:string,query:Array<string>,param?:Array<paramFormat>):JSX.Element=>{\n        let result:JSX.Element[]=query.map((item,index)=>{\n            return (\n                <Form.Item \n                    key={`formItemQuery-${index}`} \n                    label={item}  name={item} \n                    rules={[{ required: true, message:`${item} 必传` }]}>\n                    <Input/>\n                </Form.Item>\n            );\n        });\n\n        param?.map((item,index)=>{\n            result.push(\n                <Form.Item \n                    key={`formItemParam-${index}`} \n                    label={item.name}  name={item.name} \n                    rules={[{ required: item.required, message:`${item.name} 必传` }]}>\n                    <Input/>\n                </Form.Item>\n            )\n        });\n\n        result.push(\n            <Button \n                key={`formButtom-${key}`}\n                style={{marginLeft:\"20%\",width:\"60%\"}} \n                type=\"primary\"\n                htmlType=\"submit\">\n                    提交测试\n                </Button>\n        );\n\n        let nature:object={\n            labelCol:{span:4},\n            wrapperCol:{span: 16},\n            name:`form-${key}`,\n            onFinish:this.postData\n        };\n        \n        return <Form {...nature}>{result}</Form>;\n    }\n\n    //提交请求\n    private postData=(res:any)=>{\n        let url:string='';\n        let config:any=this.state.requestConfig;\n        //解析url把参数插入到url中并剔除参数\n        (config.url as string).split('/').map((item)=>{\n            let tmp:string=item;\n            if(/\\{.{1,}\\}/.test(item)){\n                let key:string=item.slice(1,item.length-1);\n                tmp=res[key];\n                delete res[key];\n            }\n            url+=`/${tmp}`;\n        });\n        //请求\n        let baseHost=this.props.baseHost;\n        Utils.request(config.method,baseHost+url,res).then((res:any)=>{\n            if(this.props.requestExample){\n                this.props.requestExample(this.state.requestConfig,res);\n            }\n        }).catch(err=>{\n            console.log(err);\n            notification.error({\n                top:30,\n                message:JSON.stringify(err),\n            });\n        })\n\n    }\n\n    //解析url\n    private parseUrl=(url:string):Array<string>=>{\n        let query:Array<string>=[];\n        url.split('/').map((item)=>{\n            if(/\\{.{1,}\\}/.test(item)){\n                query.push(item.slice(1,item.length-1));\n            }\n        });\n        return query;\n    }\n\n    //标题\n    private getTitle=(title:string):JSX.Element=> {\n        return <p><b style={{fontSize:'18px'}}>{title}</b></p>\n    }\n\n    //标题\n    private getEmpty=(title:string):JSX.Element=> {\n        return <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />;\n    }\n\n    //保存当前打开的折叠面板包含的信息\n    private saveData=(res:any)=>{\n        if(!res){\n            return;\n        }\n        let data=res.split('-space-');\n        this.setState({requestConfig:{\n            method:data[0],\n            url:data[1]\n        }});\n    }\n\n}\nexport default Api;","import React from 'react';\nimport {PageHeader,Descriptions,Empty} from \"antd\";\nimport {infoProps} from \"./define\";\n\n\nclass Info extends React.Component<infoProps>{\n    constructor(props:infoProps){\n        super(props);\n    }\n   \n    public render() {\n        let elemtnt:JSX.Element;\n        if(this.props.mode && this.props.mode === 'project'){\n            elemtnt=this.projectMpde();\n        }else{\n            elemtnt=this.apiMpde();\n        }\n        return (\n            <div>\n                {elemtnt}\n            </div>\n        );\n    }\n\n    private apiMpde=():JSX.Element=>{\n        if(!this.props.baseHost){\n            return <div></div>;\n        }\n        return(\n            <PageHeader title={this.props.baseHost}>\n                <Descriptions size=\"small\" column={2}>\n                    <Descriptions.Item label=\"接口\">{this.props?.title}</Descriptions.Item>\n                    <Descriptions.Item label=\"版本\">{this.props?.version}</Descriptions.Item>\n                    </Descriptions>\n            </PageHeader>\n        );\n    }\n    private projectMpde=():JSX.Element=>{\n        if(!this.props.title){\n            return <div></div>;\n        }\n        return(\n            <PageHeader title={this.props.title}>\n                <Descriptions size=\"small\" column={2}>\n                    <Descriptions.Item label=\"作者\">{this.props?.author}</Descriptions.Item>\n                    <Descriptions.Item label=\"版本\">{this.props?.version}</Descriptions.Item>\n                    <Descriptions.Item label=\"包\">{this.props?.package}</Descriptions.Item>\n                    <Descriptions.Item label=\"\"> </Descriptions.Item>\n                    <Descriptions.Item label=\"说明\">\n                        {this.props?.descriptions?.map((item,index)=>{\n                            return <span key={`infoDescriptions${index}`}>{item} </span>;\n                        })}\n                    </Descriptions.Item>\n                    </Descriptions>\n            </PageHeader>\n        );\n    }\n}\n\n\nexport default Info;","import React from 'react';\nimport Header from \"../common/navigation/header\";\nimport MenuList from \"../common/navigation/menuList\";\nimport Utils from \"../utils/utils\";\nimport {Layout,notification,message} from \"antd\";\nimport Api from \"./api\";\nimport Info from \"./info\";\nimport {homeState} from \"./define\"\n\nclass Home extends React.Component<{},homeState>{\n    constructor(props:{}){\n        super(props);\n        this.getJson();\n        this.state={\n            menuList:null,\n            Origin:null,\n            //navigation:['方法','变量','常量'],\n            current:{\n                info:{},\n                methods:{}\n            },\n            baseHost:'',\n            version:'',\n            title:'',\n            index:\"0\",\n            name :'',\n        }\n    }\n    public render() {\n        return (\n                <Layout style={{height:\"100%\"}}>\n                    <Header item={this.state.navigation} activePage={this.activePage} search={this.search}/>\n                    <Layout>\n                        <MenuList item={this.state.menuList}  replace={this.replace}/>\n                        <Layout style={{margin:\"10px\",background:\"#fff\"}}>\n                            <Layout.Content>\n                                <Info title={this.state.title} baseHost={this.state.baseHost} version={this.state.version}/>\n                                <Api item={this.state.current.api} baseHost={this.state.baseHost} requestExample={this.requestExample}/>\n                            </Layout.Content>\n                        </Layout>\n                    </Layout>\n                </Layout>\n        );\n    }\n    private getJson(file:string='data.json'){\n        let fileName=new URLSearchParams(window.location.search).get('file');\n        if(fileName && file=='data.json'){\n            file=fileName;\n        }\n        Utils.request('get',file).then(res=>{\n            //if(res.success){\n                let menu:string|null=new URLSearchParams(window.location.search).get('menu');\n                let current={\n                    info:{},\n                    methods:{}\n                };\n                if(menu){\n                    //console.log(res.data.group);\n                    let index=menu.split('-');\n                    if(res.group[index[1]] && res.group[index[1]][index[0]]){\n                        current=res.group[index[1]][index[0]];\n                    }\n                }\n                \n                this.setState({\n                    menuList:res.group,\n                    baseHost:res.baseHost,\n                    title:res.title,\n                    version:res.version,\n                    current:current\n                })\n                notification.success({\n                    message:'ok',\n                    top:30\n                });\n            // }else{\n            //     notification.error({\n            //         message:res.errorMessage ?  res.errorMessage   :'请求失败',\n            //         top:30\n            //     });\n            // }\n        }).catch(err=>{\n            console.log(err);\n            notification.error({\n                message:'失败',\n                top:30\n            });\n            message.destroy();\n        });\n    }\n    // private showContent=():JSX.Element=>{\n    //     switch(this.state.index){\n    //         case \"0\" : return <Method data={this.state.current.methods} />;\n    //         default : return <Method data={this.state.current.methods} />;\n    //     }\n    // }\n    //顶部导航切换页面\n    private activePage=(index:string):void=>{\n        this.setState({index:index})\n    }\n    //搜索json文件\n    private search=(value:string):void=>{\n        this.getJson(value);\n        window.history.pushState('myself-menu','',`?file=${value}`);\n    }\n    //左侧导航\n    private replace=(key:string,data:object):void=>{\n        window.history.pushState('myself-menu','',`?menu=${key}`);\n        this.setState({\n            current :data,\n            name    :''\n        })\n    }\n\n    //更新参数示例\n    private requestExample=(request:any,data:any):void=>{\n        let tmp:any=Object.assign(this.state.current);\n        tmp?.api.map((item:any,index:number)=>{\n            if(item.url.path===request.url && item.url.method===request.method){\n                item.return_example=JSON.stringify(data);\n            }\n        })\n        this.setState({\n            current:tmp\n        });\n    }\n    \n}\n\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from \"react-router-dom\"\n//import Router from './router/router';\nimport Home from \"./pages/home\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Home/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode></React.StrictMode>\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}